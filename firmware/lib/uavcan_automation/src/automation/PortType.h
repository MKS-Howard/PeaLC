/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 */

#ifndef __AUTOMATION_PORTTYPE
#define __AUTOMATION_PORTTYPE

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

/******************************* Source text **********************************
bool INPUT = false
bool OUTPUT = true
bool port_type
******************************************************************************/

/********************* DSDL signature source definition ***********************
automation.PortType
saturated bool port_type
******************************************************************************/

#define AUTOMATION_PORTTYPE_NAME                           "automation.PortType"
#define AUTOMATION_PORTTYPE_SIGNATURE                      (0x7E2D9B7CB35D4B38ULL)

#define AUTOMATION_PORTTYPE_MAX_SIZE                       ((1 + 7)/8)

// Constants
#define AUTOMATION_PORTTYPE_INPUT                                         false // false
#define AUTOMATION_PORTTYPE_OUTPUT                                         true // true

typedef struct
{
    // FieldTypes
    bool       port_type;                     // bit len 1

} automation_PortType;

extern
uint32_t automation_PortType_encode(automation_PortType* source, void* msg_buf);

extern
int32_t automation_PortType_decode(const CanardRxTransfer* transfer, uint16_t payload_len, automation_PortType* dest, uint8_t** dyn_arr_buf);

extern
uint32_t automation_PortType_encode_internal(automation_PortType* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t automation_PortType_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, automation_PortType* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __AUTOMATION_PORTTYPE