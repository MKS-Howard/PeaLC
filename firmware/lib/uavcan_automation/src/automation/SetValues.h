/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 */

#ifndef __AUTOMATION_SETVALUES
#define __AUTOMATION_SETVALUES

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

#include <automation/Values.h>

/******************************* Source text **********************************
uint8 node_id

uint8 index

Values values
******************************************************************************/

/********************* DSDL signature source definition ***********************
automation.SetValues
saturated uint8 node_id
saturated uint8 index
automation.Values values
******************************************************************************/

#define AUTOMATION_SETVALUES_ID                            20000
#define AUTOMATION_SETVALUES_NAME                          "automation.SetValues"
#define AUTOMATION_SETVALUES_SIGNATURE                     (0x1CB5D277F64E623CULL)

#define AUTOMATION_SETVALUES_MAX_SIZE                      ((55 + 7)/8)

// Constants

typedef struct
{
    // FieldTypes
    uint8_t    node_id;                       // bit len 8
    uint8_t    index;                         // bit len 8
    automation_Values values;                        //

} automation_SetValues;

extern
uint32_t automation_SetValues_encode(automation_SetValues* source, void* msg_buf);

extern
int32_t automation_SetValues_decode(const CanardRxTransfer* transfer, uint16_t payload_len, automation_SetValues* dest, uint8_t** dyn_arr_buf);

extern
uint32_t automation_SetValues_encode_internal(automation_SetValues* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t automation_SetValues_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, automation_SetValues* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __AUTOMATION_SETVALUES