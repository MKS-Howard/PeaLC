/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 */

#ifndef __AUTOMATION_TELLVALUES
#define __AUTOMATION_TELLVALUES

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

#include <automation/PortType.h>
#include <automation/Values.h>

/******************************* Source text **********************************
PortType port_type

uint8 index

Values values
******************************************************************************/

/********************* DSDL signature source definition ***********************
automation.TellValues
automation.PortType port_type
saturated uint8 index
automation.Values values
******************************************************************************/

#define AUTOMATION_TELLVALUES_ID                           20001
#define AUTOMATION_TELLVALUES_NAME                         "automation.TellValues"
#define AUTOMATION_TELLVALUES_SIGNATURE                    (0x9D12BA899BA75CE1ULL)

#define AUTOMATION_TELLVALUES_MAX_SIZE                     ((48 + 7)/8)

// Constants

typedef struct
{
    // FieldTypes
    automation_PortType port_type;                     //
    uint8_t    index;                         // bit len 8
    automation_Values values;                        //

} automation_TellValues;

extern
uint32_t automation_TellValues_encode(automation_TellValues* source, void* msg_buf);

extern
int32_t automation_TellValues_decode(const CanardRxTransfer* transfer, uint16_t payload_len, automation_TellValues* dest, uint8_t** dyn_arr_buf);

extern
uint32_t automation_TellValues_encode_internal(automation_TellValues* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t automation_TellValues_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, automation_TellValues* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __AUTOMATION_TELLVALUES