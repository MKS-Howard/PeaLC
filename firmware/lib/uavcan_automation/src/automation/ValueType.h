/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 */

#ifndef __AUTOMATION_VALUETYPE
#define __AUTOMATION_VALUETYPE

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

/******************************* Source text **********************************
uint2 DIGITAL = 1
uint2 ANALOG = 2
uint2 value_type
******************************************************************************/

/********************* DSDL signature source definition ***********************
automation.ValueType
saturated uint2 value_type
******************************************************************************/

#define AUTOMATION_VALUETYPE_NAME                          "automation.ValueType"
#define AUTOMATION_VALUETYPE_SIGNATURE                     (0x3D7542F652D7C183ULL)

#define AUTOMATION_VALUETYPE_MAX_SIZE                      ((2 + 7)/8)

// Constants
#define AUTOMATION_VALUETYPE_DIGITAL                                          1 // 1
#define AUTOMATION_VALUETYPE_ANALOG                                           2 // 2

typedef struct
{
    // FieldTypes
    uint8_t    value_type;                    // bit len 2

} automation_ValueType;

extern
uint32_t automation_ValueType_encode(automation_ValueType* source, void* msg_buf);

extern
int32_t automation_ValueType_decode(const CanardRxTransfer* transfer, uint16_t payload_len, automation_ValueType* dest, uint8_t** dyn_arr_buf);

extern
uint32_t automation_ValueType_encode_internal(automation_ValueType* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t automation_ValueType_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, automation_ValueType* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __AUTOMATION_VALUETYPE